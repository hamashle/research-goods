d set $lm0m0p0 1 0000000000000010
d set $lm2m0p0 1 0000000000000010
d set $lm4m0p0 1 0000000000000010
d set $lm6m0p0 1 0000000000000010
d set $lm8m0p0 1 0000000000000010
d set $lm10m0p0 1 0000000000000000
d set $lm12m0p0 1 0000000000000000
d set $lm14m0p0 1 0000000000000000
d set $lm16m0p0 1 0000000000000000
d set $lm18m0p0 1 0000000000000000
d set $lm20m0p0 1 0000000000000000
d set $lm22m0p0 1 0000000000000000
d set $lm24m0p0 1 0000000000000000
d set $lm26m0p0 1 0000000000000000
d set $lm28m0p0 1 0000000000000000
d set $lm30m0p0 1 0000000000000000
d set $lm32m0p0 1 0000000000000000
d set $lm34m0p0 1 0000000000000000
d set $lm36m0p0 1 0000000000000000
d set $lm38m0p0 1 0000000000000000
d set $lm40m0p0 1 0000000000000000
d set $lm42m0p0 1 0000000000000000
d set $lm44m0p0 1 0000000000000000
d set $lm46m0p0 1 0000000000000000
d set $lm48m0p0 1 0000000000000000

### i == 0 || i == L || j == 0 || j == L　の時は、そのまま保存する
### 一回目は、0~8までをln0v ~ ln8vに保存する。
ipassa $lm0v $ln0v
ipassa $lm2v $ln2v
ipassa $lm4v $ln4v
ipassa $lm6v $ln6v
ipassa $lm8v $ln8v

### ラプラス方程式の加算部分の実装
### ひとけたのときは、シフトしないようにするひつようがある。
## 一回目
ipassa $lm2v $ln2v
nop
nop
iadd $ln2v $lm10v $lr50v
iadd $lm14v $aluf $lr50v
iadd $lm22v $aluf $lr50v
nop

### 1/4倍のシフト命令
imm i"4" $nowrite
ilsr $lr50v $aluf $t
nop
ipassa $t $lr12v
d get $lr12n0c0b0m0p0 1
nop
nop
iadd $lr12v $lr12v $lm12v
iadd $lr12v $aluf $lm12v
iadd $lr12v $aluf $lm12v

d get $lm12n0c0b0m0p0 1
### ここまでで、lm12vの処理

#ipassa $lm4v $ln4v
#nop
#nop
#iadd $ln4v $lm12v $lr14v
#iadd $lm16v $aluf $lr14v
#iadd $lm24v $aluf $lr14v

